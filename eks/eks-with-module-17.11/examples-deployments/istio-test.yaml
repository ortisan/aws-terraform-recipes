apiVersion: elbv2.k8s.aws/v1beta1
kind: TargetGroupBinding
metadata:
  name: my-tgb-80-nlb
  namespace: istio-system
spec:
  serviceRef:
    name: istio-ingressgateway # route traffic to the awesome-service
    port: 80         
  targetGroupARN: arn:aws:elasticloadbalancing:us-east-1:779882487479:targetgroup/testing-istio-80-31381/e97fd8e07443027c
  targetType: instance
  networking:
    ingress:
    - from:
      - ipBlock:
          cidr: 0.0.0.0/0 # subnet-1 cidr
      ports:
      - protocol: TCP # Allow all TCP traffic from ALB SG    
        port: 31381

# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   namespace: istio-system
#   name: ingress
#   labels:
#     app: ingress
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: "nlb-ip"
#     kubernetes.io/ingress.class: alb
#     # alb.ingress.kubernetes.io/scheme: internet-facing
#     # # alb.ingress.kubernetes.io/subnets: subnet-01459f2806e7d9f24,subnet-080509807e667e94e
#     # alb.ingress.kubernetes.io/healthcheck-path: /healthz/ready
#     # alb.ingress.kubernetes.io/healthcheck-port: "31371"
#     # alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
#     # service.beta.kubernetes.io/load-balancer-name: my-nlb 
#     # service.beta.kubernetes.io/aws-load-balancer-name: my-nlb
#     # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
#     # service.beta.kubernetes.io/aws-load-balancer-type: nlb
#     # # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
#     # service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: name=my-nlb,tech-team-email=tentativafc@gmail.com,owner-contact-email=tentativafc@gmail.com,LoadBalancerType=VPCLink
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /*
#             backend:
#               serviceName: istio-ingressgateway
#               servicePort: 80
# ---
# apiVersion: elbv2.k8s.aws/v1alpha1
# kind: TargetGroupBinding
# metadata:
#   name: SearchFilterApp # create a new TargetGroupBinding called SearchFilterApp
# spec:
#   serviceRef:
#     name: search-svc # route traffic to the search-svc
#     port: 80
#   targetGroupARN: <arn-to-targetGroup>